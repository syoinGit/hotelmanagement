<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.hotel.management.repository.HotelRepository">

  <!-- 宿泊者全件取得 -->
  <select id="findAllGuest" resultType="com.portfolio.hotel.management.data.guest.Guest">
    SELECT * FROM guest
  </select>

  <!-- 宿泊プラン全件取得 -->
  <select id="findAllBooking" resultType="com.portfolio.hotel.management.data.booking.Booking">
    SELECT * FROM booking
  </select>

  <!-- 宿泊予約全件取得 -->
  <select id="findAllReservation"
    resultType="com.portfolio.hotel.management.data.reservation.Reservation">
    SELECT * FROM reservation
  </select>

  <!-- 本日チェックイン予定の宿泊者取得（未チェックイン状態） -->
  <select id="findGuestsTodayCheckIn" resultType="com.portfolio.hotel.management.data.guest.Guest">
    SELECT
    guest.id, guest.name, guest.kana_name, guest.gender, guest.age,
    guest.region, guest.email, guest. Phone, guest.deleted
    FROM guest
    INNER JOIN reservation ON guest.id = reservation.guest_id
    WHERE reservation.check_in_date = #{today}
    AND reservation.status = 'NOT_CHECKED_IN'
  </select>

  <!-- 本日チェックイン予定の予約情報取得 -->
  <select id="findReservationTodayCheckIn"
    resultType="com.portfolio.hotel.management.data.reservation.Reservation">
    SELECT * FROM reservation
    WHERE check_in_date = #{today}
    AND status = 'NOT_CHECKED_IN'
  </select>

  <!-- 本日チェックアウト予定の宿泊者取得（チェックイン中） -->
  <select id="findGuestsTodayCheckOut" resultType="com.portfolio.hotel.management.data.guest.Guest">
    SELECT
    guest.id, guest.name, guest.kana_name, guest.gender, guest.age,
    guest.region, guest.email, guest.phone, guest.deleted
    FROM guest
    INNER JOIN reservation ON guest.id = reservation.guest_id
    WHERE reservation.check_out_date = #{today}
    AND reservation.status = 'CHECKED_IN'
  </select>

  <!-- 本日チェックアウト予定の予約情報取得 -->
  <select id="findReservationTodayCheckOut"
    resultType="com.portfolio.hotel.management.data.reservation.Reservation">
    SELECT * FROM reservation
    WHERE check_out_date = #{today}
    AND status = 'CHECKED_IN'
  </select>

  <!-- 宿泊者の検索（氏名・カナ・電話番号・期間） -->
  <select id="searchGuest" parameterType="map"
    resultType="com.portfolio.hotel.management.data.guest.Guest">
    SELECT DISTINCT guest.*
    FROM guest
    LEFT JOIN reservation ON guest.id = reservation.guest_id
    WHERE guest.deleted = FALSE

    <if test="guest.name != null and guest.name != ''">
      AND guest.name LIKE CONCAT('%', #{guest.name}, '%')
    </if>

    <if test="guest.kanaName != null and guest.kanaName != ''">
      AND guest.kana_name LIKE CONCAT('%', #{guest.kanaName}, '%')
    </if>

    <if test="guest.phone != null and guest.phone != ''">
      AND guest.phone = #{guest.phone}
    </if>

    <if test="guest.checkInDate != null">
      AND reservation.check_in_date &gt;= #{guest.checkInDate}
    </if>

    <if test="guest.checkOutDate != null">
      AND DATE_ADD(reservation.check_in_date, INTERVAL reservation.stay_days DAY) &lt;=
      #{guest.checkOutDate}
    </if>
  </select>

  <!-- 宿泊予約IDによる予約情報取得 -->
  <select id="searchReservation"
    resultType="com.portfolio.hotel.management.data.reservation.Reservation" parameterType="string">
    SELECT * FROM reservation WHERE id = #{id}
  </select>

  <!-- 宿泊者情報の完全一致検索（マッチング） -->
  <select id="matchGuest" parameterType="com.portfolio.hotel.management.data.guest.GuestMatch"
    resultType="com.portfolio.hotel.management.data.guest.Guest">
    SELECT * FROM guest
    WHERE name = #{name}
    AND kana_name = #{kanaName}
    AND phone = #{phone}
  </select>

  <!-- 宿泊者IDによる宿泊者検索 -->
  <select id="findByGuestId" resultType="com.portfolio.hotel.management.data.guest.Guest">
    SELECT *
    FROM guest
    WHERE id = #{id}
  </select>

  <!-- 宿泊プランIDによる金額取得 -->
  <select id="findTotalPriceById" resultType="java.math.BigDecimal">
    SELECT price FROM booking WHERE id = #{id}
  </select>

  <!-- 宿泊予約IDによるステータス取得 -->
  <select id="findStatusById"
    resultType="com.portfolio.hotel.management.data.reservation.ReservationStatus">
    SELECT status FROM reservation WHERE id = #{id}
  </select>

  <!-- IDによるユーザー取得 -->
  <select id="findUserById" parameterType="string"
    resultType="com.portfolio.hotel.management.data.user.User">
    SELECT id, password
    FROM users
    WHERE id = #{id}
  </select>

  <!-- 宿泊者登録 -->
  <insert id="insertGuest" parameterType="com.portfolio.hotel.management.data.guest.Guest">
    INSERT INTO guest (
    id, name, kana_name, gender, age, region, email, phone, deleted
    ) VALUES (
    #{id}, #{name}, #{kanaName}, #{gender}, #{age}, #{region}, #{email}, #{phone}, 0
    )
  </insert>

  <!-- 宿泊プラン登録 -->
  <insert id="insertBooking" parameterType="com.portfolio.hotel.management.data.booking.Booking">
    INSERT INTO booking (
    id, name, description, price, is_available
    ) VALUES (
    #{id}, #{name}, #{description}, #{price}, #{isAvailable}
    )
  </insert>

  <!-- 宿泊予約登録 -->
  <insert id="insertReservation"
    parameterType="com.portfolio.hotel.management.data.reservation.Reservation">
    INSERT INTO reservation (
    id, guest_id, booking_id, check_in_date, check_out_date,
    stay_days, total_price, status, memo, created_at
    ) VALUES (
    #{id}, #{guestId}, #{bookingId}, #{checkInDate}, #{checkOutDate},
    #{stayDays}, #{totalPrice}, #{status}, #{memo}, #{createdAt}
    )
  </insert>

  <!-- 宿泊者情報の更新 -->
  <update id="updateGuest" parameterType="com.portfolio.hotel.management.data.guest.Guest">
    UPDATE guest
    SET name = #{name},
    kana_name = #{kanaName},
    gender = #{gender},
    age = #{age},
    region = #{region},
    email = #{email},
    phone = #{phone},
    deleted = #{deleted}
    WHERE id = #{id}
  </update>

  <!-- 宿泊予約情報の更新 -->
  <update id="updateReservation"
    parameterType="com.portfolio.hotel.management.data.reservation.Reservation">
    UPDATE reservation
    SET check_in_date = #{checkInDate},
    check_out_date = #{checkOutDate},
    stay_days = #{stayDays},
    total_price = #{totalPrice},
    status = #{status},
    memo = #{memo}
    WHERE id = #{id}
  </update>

  <!-- 宿泊者の論理削除（削除フラグをON） -->
  <update id="logicalDeleteGuest">
    UPDATE guest
    SET deleted = TRUE
    WHERE id = #{id}
  </update>

  <!-- チェックイン処理（予約ステータスを更新） -->
  <update id="checkIn">
    UPDATE reservation
    SET status = 'CHECKED_IN'
    WHERE id = #{id}
  </update>

  <!-- チェックアウト処理（予約ステータスを更新） -->
  <update id="checkOut">
    UPDATE reservation
    SET status = 'CHECKED_OUT'
    WHERE id = #{id}
  </update>

  <!-- ユーザーの登録処理 -->
  <insert id="insertUser" parameterType="com.portfolio.hotel.management.data.user.User">
    INSERT INTO users (id, password)
    VALUES (#{id}, #{password});
  </insert>

</mapper>